digraph "classes" {
rankdir=BT
charset="utf-8"
"pywfe.utils.forcer.Forcer" [color="black", fontcolor="black", label=<{Forcer|ax<br ALIGN="LEFT"/>callbacks<br ALIGN="LEFT"/>fig<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>selected_nodes : list<br ALIGN="LEFT"/>|add_nodal_force(node, force_dict)<br ALIGN="LEFT"/>on_pick(event)<br ALIGN="LEFT"/>select_nodes()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pywfe.model.Model" [color="black", fontcolor="black", label=<{Model|K<br ALIGN="LEFT"/>K_sub : dict<br ALIGN="LEFT"/>L : int<br ALIGN="LEFT"/>M<br ALIGN="LEFT"/>M_sub : dict<br ALIGN="LEFT"/>N : int<br ALIGN="LEFT"/>boundaries : Boundaries<br ALIGN="LEFT"/>delta : ndarray<br ALIGN="LEFT"/>description : NoneType<br ALIGN="LEFT"/>dof<br ALIGN="LEFT"/>eigensolution : tuple, Eigensolution<br ALIGN="LEFT"/>force : ndarray<br ALIGN="LEFT"/>forcer<br ALIGN="LEFT"/>frequency : int<br ALIGN="LEFT"/>logger : Logger, RootLogger, NoneType<br ALIGN="LEFT"/>node : dict<br ALIGN="LEFT"/>solution : dict<br ALIGN="LEFT"/>solver : str<br ALIGN="LEFT"/>x_e : int<br ALIGN="LEFT"/>|dispersion_relation(frequency_array, direction, imag_threshold)<br ALIGN="LEFT"/>displacements(x_r, f, dofs)<br ALIGN="LEFT"/>dofs_to_indices(dofs)<br ALIGN="LEFT"/>excited_amplitudes(f)<br ALIGN="LEFT"/>forces(x_r, f, dofs)<br ALIGN="LEFT"/>form_dsm(f)<br ALIGN="LEFT"/>frequency_sweep(f_arr, x_r, quantities, mac, dofs)<br ALIGN="LEFT"/>generate_eigensolution(f)<br ALIGN="LEFT"/>is_same_frequency(f)<br ALIGN="LEFT"/>left_dofs()<br ALIGN="LEFT"/>modal_displacements(x_r, f, dofs)<br ALIGN="LEFT"/>modal_forces(x_r, f, dofs)<br ALIGN="LEFT"/>phase_velocity(frequency_array, direction, imag_threshold)<br ALIGN="LEFT"/>propagated_amplitudes(x_r, f)<br ALIGN="LEFT"/>reflection_matrices(f)<br ALIGN="LEFT"/>save(folder, source)<br ALIGN="LEFT"/>see()<br ALIGN="LEFT"/>select_dofs(fieldvar)<br ALIGN="LEFT"/>selection_index(dof)<br ALIGN="LEFT"/>set_boundary(which, condition)<br ALIGN="LEFT"/>transfer_function(f_arr, x_r, dofs, derivative)<br ALIGN="LEFT"/>wavenumbers(f, direction, imag_threshold)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pywfe.utils.shaker.Shaker" [color="black", fontcolor="black", label=<{Shaker|Bl : float<br ALIGN="LEFT"/>L : float<br ALIGN="LEFT"/>R : float<br ALIGN="LEFT"/>V_ext : int<br ALIGN="LEFT"/>c_viscous<br ALIGN="LEFT"/>k : int<br ALIGN="LEFT"/>m : float<br ALIGN="LEFT"/>|accelerance(f)<br ALIGN="LEFT"/>force(f, q0)<br ALIGN="LEFT"/>newtons_per_amp(f)<br ALIGN="LEFT"/>newtons_per_volt(f)<br ALIGN="LEFT"/>volts_per_amp(f)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"pywfe.utils.forcer.Forcer" -> "pywfe.model.Model" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="forcer", style="solid"];
}
